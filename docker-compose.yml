# version: '3'
# services:
#   pg_db:
#     container_name: pg_container
#     image: 'postgres:latest'
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: nest_db
#     networks:
#       - myProject
# networks:
#   myProject:


# version: '3'
# services:
#   pg_db:
#     container_name: pg_container
#     image: 'postgres:latest'
#     ports:
#       - 5434:5432
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: nest_db
#     networks:
#       - myProject
# networks:
#   myProject:


version: '3'
services:
  pg_db:
    container_name: pg_container
    image: 'postgres:latest'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pg_db
    networks:
      - myProject
    # volumes: 
    #   - database:/var/lib/postgresql/data
  backend:
    env_file:
      - ./backend/.env
    depends_on:
      - pg_db
    build:
      context: ./Backend/
      # args:
      #   NODE_ENV: production
      dockerfile: 'Dockerfile'
    ports:
      - 5000:5000
      - 4000:4000
      - 3080:3080
      - 5555:5555
    networks:
      - myProject
  frontend:
    build:
      context: ./Frontend/
      args:
        NODE_ENV: production
      dockerfile: 'Dockerfile'
    ports:
      - 3000:3000
    networks:
      - myProject

volumes:
  database: {}

networks:
  myProject: 